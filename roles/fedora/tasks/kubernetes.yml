---
- name: Remove Fedora Kubectl dnf packages
  dnf:
    state: absent
    name:
      - kubernetes-client

- rpm_key: key=https://packages.cloud.google.com/yum/doc/yum-key.gpg
    state=present

- rpm_key: key=https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    state=present

- copy: src=kubernetes.repo 
    dest=/etc/yum.repos.d/kubernetes.repo
    owner=root group=root mode=644

- name: Install Kubectl
  dnf:
    state: latest
    name:
      - kubectl

- name: Install Microk8s
  snap:
    classic: true
    channel: candidate
    name:
      - microk8s

- name: Append group microk8s to "{{ ansible_env.SUDO_USER }}"
  user: 
    name: "{{ ansible_env.SUDO_USER }}"
    groups: microk8s
    append: yes

- name: Microk8s start
  shell: source /etc/profile.d/snapd.sh && microk8s.start

- name: Microk8s status
  shell: source /etc/profile.d/snapd.sh && microk8s.status --wait-ready

- name: Microk8s enable modules
  shell: "source /etc/profile.d/snapd.sh && microk8s.enable {{ item }}"
  with_items:
    - storage
    - registry
    - dns
    - helm
    - helm3

- name: Creates "/opt/kubeval/{{ kubeval.version }}" directory
  file:
    path: "/opt/kubeval/{{ kubeval.version }}"
    state: directory
    mode: 0775

- name: Install Kubeval
  unarchive:
    src: https://github.com/instrumenta/kubeval/releases/download/{{ kubeval.version }}/kubeval-linux-amd64.tar.gz
    remote_src: yes
    dest: "/opt/kubeval/{{ kubeval.version }}"
    creates: "/opt/kubeval/{{ kubeval.version }}/linux-amd64"

- name: Install Krew
  script: install-krew.sh
  become: yes
  become_user: "{{ ansible_env.SUDO_USER }}"
  args:
    creates: "/home/{{ ansible_env.SUDO_USER }}/.krew/bin/kubectl-krew"

- name: Install Krew plugins
  shell: "kubectl krew install {{ item }}"
  become: yes
  become_user: "{{ ansible_env.SUDO_USER }}"
  with_items:
    - oidc-login
    - ns # kubens
    - tail # Kail
    - iexec
    - ctx #kubectx
    - kudo

- name: Update Krew plugins
  shell: "kubectl krew upgrade"
  become: yes
  become_user: "{{ ansible_env.SUDO_USER }}"

- name: Creates "/opt/helm/{{ helm.version }}" directory
  file:
    path: "/opt/helm/{{ helm.version }}"
    state: directory
    mode: 0775

- name: Install Helm CLI
  unarchive:
    src: https://get.helm.sh/helm-{{ helm.version }}-linux-amd64.tar.gz
    remote_src: yes
    dest: "/opt/helm/{{ helm.version }}"
    creates: "/opt/helm/{{ helm.version }}/linux-amd64"

- name: Copy Helm CLI
  copy:
    dest: /usr/local/bin
    src: "/opt/helm/{{ helm.version }}/linux-amd64/helm"
    force: yes
    mode: a+x
